<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/util
          http://www.springframework.org/schema/util/spring-util.xsd
          http://www.springframework.org/schema/mvc 
          http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop.xsd
        ">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 
	Enables the Spring MVC @Controller programming model 
	-->
	<mvc:annotation-driven  />

	<!-- 
	Enables the Spring MVC @Controller programming model 
	<mvc:annotation-driven conversion-service="conversionService" enable-matrix-variables="true">
		<argument-resolvers>
			<beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/>
		</argument-resolvers>
		<async-support default-timeout="3000">
			<callable-interceptors>
				<beans:bean class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" />
			</callable-interceptors>
		</async-support>
	</annotation-driven>
	-->

	<!-- 
	<mvc:default-servlet-handler />

	<bean id="formattingConversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	</bean>
	-->

	<!-- 
	Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory 
	<resources mapping="/resources/**" location="/resources/" />
	-->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/img/**" location="/resources/img/" />
	<mvc:resources mapping="/css/**" location="/resources/css/" />
	<mvc:resources mapping="/data/**" location="/resources/data/" />

	
	<!-- 
	Resource Bundles
 	-->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/resources/data/messages" />
	</bean>

	<!-- 
	Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory \
	config/AppConfig: setupViewResolver
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	-->
<!-- 	<beans:bean id="viewResolver" class="com.leatherswan.artisticendeavors.config.AppConfig" /> -->

	<!--
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.xslt.XsltViewResolver"> 
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</beans:bean>
 	-->
	
	<!-- 
	Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package 
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="formatters">
            <beans:bean class="com.leatherswan.artisticendeavors.dao.ItemDaoImpl" />
		</beans:property>
	</beans:bean>
	-->

	<!-- 
	Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package 
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	-->

	<!-- Imports user-defined @Controller beans that process client requests -->
<!-- 	<beans:import resource="controllers.xml" /> -->

	<!-- 	
	<task:annotation-driven />
	-->
	<context:annotation-config />

<!-- 	
-->
	<aop:aspectj-autoproxy />

</beans:beans>